version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: helpdesk-postgres-dev
    environment:
      POSTGRES_DB: helpdesk_dev
      POSTGRES_USER: helpdesk_user
      POSTGRES_PASSWORD: helpdesk_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - helpdesk-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: helpdesk-redis-dev
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - helpdesk-dev-network

  # Backend API (Development mode with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: helpdesk-backend-dev
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: helpdesk_dev
      DB_USER: helpdesk_user
      DB_PASSWORD: helpdesk_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      JWT_SECRET: dev-jwt-secret-key
      JWT_REFRESH_SECRET: dev-refresh-secret-key
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASSWORD: your-app-password
      EMAIL_FROM: "Helpdesk System <noreply@yourcompany.com>"
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - helpdesk-dev-network
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
    command: npm run dev

  # Frontend React App (Development mode with hot reload)
  frontend:
    image: node:18-alpine
    container_name: helpdesk-frontend-dev
    working_dir: /app
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - helpdesk-dev-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm start"

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  helpdesk-dev-network:
    driver: bridge
